### SQL 총 19문제
### 파일 이름은 이름으로 수정해서 업로드하기 ex) 현상원_SQL숙제.txt

1. 사원이름, 사원직책, 사원급여 조회.
```sql
    select 
        ename,
        job,
        sal
    from emp
```
2. 사수번호가 7839인 사원 번호, 이름, 입사날짜 조회.
```sql
    select
        empno,
        ename,
        hiredate
    from emp
    where mgr = 7839
```
3. 급여가 3000 이하인 사원의 모든 정보 조회.
```sql
    select 
        *
    from emp
    where sal <= 3000
```
4. 사원이름, 부서번호, 부서이름, 부서 근무지 조회.
```sql
    select 
        e.ename,
        e.deptno,
        d.dname,
        d.loc
    from emp as e
    inner join dept as d
    on e.deptno = d.deptno
```
5. 부서별 급여합계, 부서이름 조회.
```sql
    select 
        d.dname, 
        sum(e.sal)
    from emp as e
    join dept as d
    on e.deptno = d.deptno
    group by d.dname
```
6. 부서 근무지가 NEW YORK이고, 직책이 MANAGER인 
   사원의 이름, 급여를 조회. 
```sql
    select 
        e.ename,
        e.sal
    from emp as e
    inner join dept as d 
    on e.deptno = d.deptno
    where d.loc = 'NEW YORK'
    and e.job = 'MANAGER' 
```
7. 1983년 이후 입사한 사원의 보너스가 null
   이면 100 주고, 사원의 이름, 부서이름, 직업을 조회. (ifnull 검색하기)
```sql
    select 
        e.ename,
        d.dname,
        ifnull(e.comm,100)
    from emp as e
    join dept as d
    on e.deptno = d.deptno
    where date_format(e.HIREDATE,'%Y') > 1983
```
8.  부서명이 RESEARCH인 사원의 이름, 급여, 근무 지역 조회.
```sql
    select 
        e.ename,
        e.sal,
        d.dname
    from emp as e
    inner join dept as d 
    on e.deptno = d.deptno
    where d.DNAME = 'RESEARCH'
```
9. 보너스를 받은 사원 이름, 직책, 급여, 부서명 조회.
```sql
    select 
        e.ename,
        e.job,
        d.dname
    from emp as e
    inner join dept as d 
    on e.deptno = d.deptno
    where e.comm is not null
    and e.comm != 0
```
10. 이름 첫글 A자를 가진 사원 이름, 직책, 부서명, 부서 위치 조회.
```sql
    select 
        e.ename,
        e.job,
        d.dname,
        d.loc
    from emp as e
    inner join dept as d 
    on e.deptno = d.deptno
    where e.ename like 'A%'
```
11. 사원명, 사수번호, 사수 이름 조회.
   단, 사수가 없는 사원도 포함
```sql
    select 
        e.ename as '사원 이름',
        boss.EMPNO as '사수 번호',
        boss.ENAME as '사수 이름'
    from emp as e
    left join emp as boss
    on e.MGR = boss.EMPNO 
```
12. 사원명, 사수번호, 사수 이름 조회.
   단, 사수가 없는 사원만
```sql
    select 
        e.ename as '사원 이름',
        ifnull(boss.EMPNO,'사수 없음') as '사수 번호',
        ifnull(boss.ENAME,'사수 없음') as '사수 이름'
    from emp as e
    left join emp as boss
    on e.MGR = boss.EMPNO
    where e.mgr is null
```
13. 상사번호가 7698인 사원의 이름, 사원번호, 상사번호, 상사이름 조회.
```sql
    select 
        e.ename as '사원 이름',
        e.empno as '사원 번호',
        boss.empno as '상사 번호',
        boss.ename as '상사 이름'
    from emp as e
    inner join emp as boss 
    on e.mgr = boss.empno
    where e.mgr = '7698'
```
14. 상사보다 먼저 입사한 사원의 사원이름, 사원의 입사일, 상사 이름, 상사 입사일 조회.
```sql
    select 
        e.ename as "사원 이름",
        e.hiredate as "사원 입사",
        boss.ename as "상사 이름",
        boss.hiredate as "상사 입사"
    from emp as e
    inner join emp boss
    where e.mgr = boss.empno
    and e.hiredate < boss.hiredate
```
15. 업무가 MANAGER이거나 CLERK고 입사날짜가 1982년에 입사한
 사원의 사원번호, 이름, 급여, 직업, 부서명 조회.
```sql
    select 
        e.empno,
        e.ename,
        e.sal,
        e.job,
        d.dname,
        e.HIREDATE 
    from emp as e
    inner join dept as d 
    on e.deptno = d.deptno
    where (e.job = 'MANAGER' or e.job = 'CLERK')
    and date_format(HIREDATE,'%Y') = '1982'
```
16. 부서별 급여 총합 조회. 
    단, 사원이 존재하지 않는 부서도 포함해서 급여 순으로 내림차순 하시오.
```sql
    select 
        d.dname,
        sum(e.sal)
    from emp as e
    right join dept as d 
    on e.DEPTNO = d.DEPTNO 
    group by d.DEPTNO 
    order by 2 desc
```
17.  사원 이름, 상사 이름, 사원 부서번호, 사원 부서명, 사원 근무지역 조회. 
    단, 사원이 존재하지 않는 부서번호와 부서명도 조회.
```sql
    select 
        e.ename as "사원 이름",
        boss.ename as "사수 이름",
        d.deptno as "부서 번호",
        d.dname as "부서 명 ",
        d.loc as "근무 지역"
    from emp as e
    inner join emp as boss
    on e.mgr = boss.empno
    right join dept as d
    on d.deptno = e.deptno
```
18. 부서 위치가 CHICAGO이고 사수 급여가 5000 미만인 
 사원 번호,사원 이름,사수 번호, 사수 이름, 사수 급여, 부서명을 조회.
 단, 사원의 입사날짜로 오름차순.
```sql
    select 
        e.empno as "사원 번호",
        e.ename as "사원 이름",
        boss.empno as "사수 번호",
        boss.ename as "사수 이름",
        boss.sal as "사수 급여",
        d.DNAME as "부서 명"
    from emp as e
    inner join dept as d 
    on e.deptno = d.deptno
    inner join emp as boss
    on e.mgr = boss.empno 
    where d.loc = 'CHICAGO'
    and boss.sal < 5000
    order by e.HIREDATE asc
```
19. 입사날짜를 월별로 몇명이 입사했는지 카운트해서 조회.
```sql
    select
        date_format(HIREDATE,'%m'),
        count(empno)
    from emp
    group by date_format(HIREDATE,'%m')
```